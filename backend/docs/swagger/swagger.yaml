basePath: /
definitions:
  models.APIResponse:
    properties:
      code:
        type: string
      data: {}
      message:
        type: string
      timestamp:
        type: string
    type: object
  models.AuthorizationCode:
    properties:
      code:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      current_activations:
        type: integer
      custom_parameters:
        type: object
      customer_id:
        type: string
      customer_name:
        type: string
      customer_name_display:
        type: string
      deployment_type:
        type: string
      deployment_type_display:
        type: string
      description:
        type: string
      encryption_type:
        type: string
      encryption_type_display:
        type: string
      end_date:
        type: string
      feature_config:
        type: object
      id:
        type: string
      is_locked:
        type: boolean
      lock_reason:
        type: string
      locked_at:
        type: string
      locked_by:
        type: string
      max_activations:
        type: integer
      software_id:
        type: string
      software_version:
        type: string
      start_date:
        type: string
      status:
        type: string
      status_display:
        type: string
      updated_at:
        type: string
      usage_limits:
        type: object
    type: object
  models.AuthorizationCodeCreateRequest:
    properties:
      custom_parameters: {}
      customer_id:
        type: string
      deployment_type:
        enum:
        - standalone
        - cloud
        - hybrid
        type: string
      description:
        maxLength: 1000
        type: string
      encryption_type:
        enum:
        - standard
        - advanced
        type: string
      feature_config: {}
      max_activations:
        minimum: 1
        type: integer
      software_id:
        type: string
      software_version:
        type: string
      usage_limits: {}
      validity_days:
        maximum: 36500
        minimum: 1
        type: integer
    required:
    - customer_id
    - deployment_type
    - max_activations
    - validity_days
    type: object
  models.AuthorizationCodeCreateResponse:
    properties:
      code:
        type: string
      id:
        type: string
    type: object
  models.AuthorizationCodeListItem:
    properties:
      code:
        type: string
      created_at:
        type: string
      current_activations:
        type: integer
      customer_id:
        type: string
      customer_name:
        type: string
      customer_name_display:
        type: string
      deployment_type:
        type: string
      deployment_type_display:
        type: string
      description:
        type: string
      end_date:
        type: string
      id:
        type: string
      is_locked:
        type: boolean
      max_activations:
        type: integer
      start_date:
        type: string
      status:
        type: string
      status_display:
        type: string
    type: object
  models.AuthorizationCodeListResponse:
    properties:
      list:
        items:
          $ref: '#/definitions/models.AuthorizationCodeListItem'
        type: array
      page:
        type: integer
      page_size:
        type: integer
      total:
        type: integer
      total_pages:
        type: integer
    type: object
  models.AuthorizationCodeLockRequest:
    properties:
      is_locked:
        description: true-锁定，false-解锁
        type: boolean
      lock_reason:
        description: 锁定原因
        maxLength: 500
        type: string
      reason:
        description: 变更原因（记录到变更历史）
        maxLength: 500
        type: string
    type: object
  models.AuthorizationCodeUpdateRequest:
    properties:
      change_type:
        enum:
        - renewal
        - upgrade
        - limit_change
        - feature_toggle
        - lock
        - unlock
        - other
        type: string
      custom_parameters: {}
      deployment_type:
        enum:
        - standalone
        - cloud
        - hybrid
        type: string
      description:
        maxLength: 1000
        type: string
      encryption_type:
        enum:
        - standard
        - advanced
        type: string
      feature_config: {}
      max_activations:
        minimum: 1
        type: integer
      reason:
        maxLength: 500
        type: string
      software_id:
        type: string
      software_version:
        type: string
      usage_limits: {}
      validity_days:
        maximum: 36500
        minimum: 1
        type: integer
    required:
    - change_type
    type: object
  models.Customer:
    properties:
      address:
        type: string
      company_size:
        type: string
      company_size_display:
        type: string
      contact_person:
        type: string
      contact_title:
        type: string
      created_at:
        type: string
      created_by:
        type: string
      customer_code:
        type: string
      customer_level:
        type: string
      customer_level_display:
        type: string
      customer_name:
        type: string
      customer_type:
        type: string
      customer_type_display:
        type: string
      description:
        type: string
      email:
        type: string
      id:
        type: string
      phone:
        type: string
      status:
        type: string
      status_display:
        type: string
      updated_at:
        type: string
      updated_by:
        type: string
    type: object
  models.CustomerCreateRequest:
    properties:
      address:
        description: 地址，可选
        maxLength: 500
        type: string
      company_size:
        description: 企业规模，可选
        enum:
        - small
        - medium
        - large
        - enterprise
        type: string
      contact_person:
        description: 联系人姓名，必填
        maxLength: 100
        type: string
      contact_title:
        description: 联系人职位，可选
        maxLength: 100
        type: string
      customer_level:
        description: 客户等级，必填
        enum:
        - normal
        - vip
        - enterprise
        - strategic
        type: string
      customer_name:
        description: 客户名称，必填
        maxLength: 200
        type: string
      customer_type:
        description: 客户类型，必填
        enum:
        - individual
        - enterprise
        - government
        - education
        type: string
      description:
        description: 描述，可选
        maxLength: 1000
        type: string
      email:
        description: 邮箱，可选
        maxLength: 255
        type: string
      phone:
        description: 电话，可选
        maxLength: 20
        type: string
      status:
        description: 状态，必填
        enum:
        - active
        - disabled
        type: string
    required:
    - contact_person
    - customer_level
    - customer_name
    - customer_type
    - status
    type: object
  models.CustomerListItem:
    properties:
      contact_person:
        type: string
      created_at:
        type: string
      customer_code:
        type: string
      customer_level:
        type: string
      customer_level_display:
        type: string
      customer_name:
        type: string
      customer_type:
        type: string
      customer_type_display:
        type: string
      email:
        type: string
      id:
        type: string
      status:
        type: string
      status_display:
        type: string
    type: object
  models.CustomerListResponse:
    properties:
      list:
        items:
          $ref: '#/definitions/models.CustomerListItem'
        type: array
      page:
        type: integer
      page_size:
        type: integer
      total:
        type: integer
      total_pages:
        type: integer
    type: object
  models.CustomerStatusUpdateRequest:
    properties:
      status:
        description: 状态，必填
        enum:
        - active
        - disabled
        type: string
    required:
    - status
    type: object
  models.CustomerUpdateRequest:
    properties:
      address:
        description: 地址，可选
        maxLength: 500
        type: string
      company_size:
        description: 企业规模，可选
        enum:
        - small
        - medium
        - large
        - enterprise
        type: string
      contact_person:
        description: 联系人姓名，可选
        maxLength: 100
        type: string
      contact_title:
        description: 联系人职位，可选
        maxLength: 100
        type: string
      customer_level:
        description: 客户等级，可选
        enum:
        - normal
        - vip
        - enterprise
        - strategic
        type: string
      customer_name:
        description: 客户名称，可选
        maxLength: 200
        type: string
      customer_type:
        description: 客户类型，可选
        enum:
        - individual
        - enterprise
        - government
        - education
        type: string
      description:
        description: 描述，可选
        maxLength: 1000
        type: string
      email:
        description: 邮箱，可选
        maxLength: 255
        type: string
      phone:
        description: 电话，可选
        maxLength: 20
        type: string
      status:
        description: 状态，可选
        enum:
        - active
        - disabled
        type: string
    type: object
  models.EnumItem:
    properties:
      display:
        description: 多语言显示文本
        type: string
      key:
        description: 枚举值
        type: string
    type: object
  models.EnumListResponse:
    properties:
      enums:
        description: 所有枚举类型
        items:
          $ref: '#/definitions/models.EnumTypeResponse'
        type: array
    type: object
  models.EnumTypeResponse:
    properties:
      items:
        description: 枚举项列表
        items:
          $ref: '#/definitions/models.EnumItem'
        type: array
      type:
        description: 枚举类型名称
        type: string
    type: object
  models.ErrorResponse:
    properties:
      code:
        description: 业务错误码，如 "100001", "900001"
        type: string
      message:
        description: 错误描述信息
        type: string
      timestamp:
        description: 错误发生时间
        type: string
    type: object
  models.HealthResponse:
    properties:
      services:
        additionalProperties:
          type: string
        type: object
      status:
        type: string
      system:
        $ref: '#/definitions/models.SystemInfo'
      timestamp:
        type: string
      uptime:
        type: string
      version:
        type: string
    type: object
  models.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  models.LoginResponse:
    properties:
      code:
        type: string
      data: {}
      message:
        type: string
    type: object
  models.SystemInfo:
    properties:
      arch:
        type: string
      num_cpu:
        type: integer
      num_goroutine:
        type: integer
      os:
        type: string
      version:
        type: string
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: 软件授权管理平台API文档
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: License Manager API
  version: "1.0"
paths:
  /api/customers:
    get:
      consumes:
      - application/json
      description: 分页查询客户列表，支持搜索和筛选
      parameters:
      - description: 页码，默认1
        in: query
        minimum: 1
        name: page
        type: integer
      - description: 每页条数，默认20，最大100
        in: query
        maximum: 100
        minimum: 1
        name: page_size
        type: integer
      - description: 搜索关键词(支持客户编码、名称、联系人、邮箱)
        in: query
        name: search
        type: string
      - description: 客户类型筛选
        enum:
        - individual
        - enterprise
        - government
        - education
        in: query
        name: customer_type
        type: string
      - description: 客户等级筛选
        enum:
        - normal
        - vip
        - enterprise
        - strategic
        in: query
        name: customer_level
        type: string
      - description: 状态筛选
        enum:
        - active
        - disabled
        in: query
        name: status
        type: string
      - description: 排序字段，默认created_at
        enum:
        - created_at
        - updated_at
        - customer_name
        - customer_code
        in: query
        name: sort
        type: string
      - description: 排序方向，默认desc
        enum:
        - asc
        - desc
        in: query
        name: order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 查询成功
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.CustomerListResponse'
              type: object
        "400":
          description: 请求参数无效
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: 未认证
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: 查询客户列表
      tags:
      - 客户管理
    post:
      consumes:
      - application/json
      description: 创建新的客户记录，自动生成客户编码
      parameters:
      - description: 客户信息
        in: body
        name: customer
        required: true
        schema:
          $ref: '#/definitions/models.CustomerCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 创建成功
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.Customer'
              type: object
        "400":
          description: 请求参数无效
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: 未认证
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "409":
          description: 客户已存在
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: 创建客户
      tags:
      - 客户管理
  /api/customers/{id}:
    delete:
      consumes:
      - application/json
      description: 软删除客户记录
      parameters:
      - description: 客户ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            $ref: '#/definitions/models.APIResponse'
        "400":
          description: 请求参数无效
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: 未认证
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: 客户不存在
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: 删除客户
      tags:
      - 客户管理
    get:
      consumes:
      - application/json
      description: 根据客户ID获取客户详细信息
      parameters:
      - description: 客户ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 查询成功
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.Customer'
              type: object
        "400":
          description: 请求参数无效
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: 未认证
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: 客户不存在
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: 获取客户详情
      tags:
      - 客户管理
    put:
      consumes:
      - application/json
      description: 更新客户信息，所有字段都是可选的
      parameters:
      - description: 客户ID
        in: path
        name: id
        required: true
        type: string
      - description: 客户信息
        in: body
        name: customer
        required: true
        schema:
          $ref: '#/definitions/models.CustomerUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.Customer'
              type: object
        "400":
          description: 请求参数无效
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: 未认证
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: 客户不存在
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: 更新客户信息
      tags:
      - 客户管理
  /api/customers/{id}/status:
    patch:
      consumes:
      - application/json
      description: 修改客户状态（激活/停用）
      parameters:
      - description: 客户ID
        in: path
        name: id
        required: true
        type: string
      - description: 状态信息
        in: body
        name: status
        required: true
        schema:
          $ref: '#/definitions/models.CustomerStatusUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 状态更新成功
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.Customer'
              type: object
        "400":
          description: 请求参数无效
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: 未认证
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: 客户不存在
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: 修改客户状态
      tags:
      - 客户管理
  /api/enums:
    get:
      consumes:
      - application/json
      description: 获取系统中所有枚举类型及其对应的多语言显示值
      produces:
      - application/json
      responses:
        "200":
          description: 查询成功
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.EnumListResponse'
              type: object
        "401":
          description: 未认证
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: 获取所有枚举值
      tags:
      - 枚举管理
  /api/enums/{type}:
    get:
      consumes:
      - application/json
      description: 根据枚举类型获取对应的多语言显示值
      parameters:
      - description: 枚举类型
        enum:
        - customer_type
        - customer_level
        - customer_status
        - company_size
        in: path
        name: type
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 查询成功
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.EnumTypeResponse'
              type: object
        "400":
          description: 请求参数无效
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: 未认证
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: 获取指定类型的枚举值
      tags:
      - 枚举管理
  /api/v1/admin/system/info:
    get:
      consumes:
      - application/json
      description: 获取详细的系统信息（需要管理员权限）
      produces:
      - application/json
      responses:
        "200":
          description: 系统信息
          schema:
            $ref: '#/definitions/models.APIResponse'
        "401":
          description: 未认证
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "403":
          description: 权限不足
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: 获取系统信息
      tags:
      - 系统
  /api/v1/auth/refresh:
    post:
      consumes:
      - application/json
      description: 刷新用户Token
      produces:
      - application/json
      responses:
        "200":
          description: 刷新成功
          schema:
            $ref: '#/definitions/models.APIResponse'
        "401":
          description: 未认证
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: 刷新Token
      tags:
      - 认证
  /api/v1/authorization-codes:
    get:
      consumes:
      - application/json
      description: 分页查询授权码列表，支持筛选和排序
      parameters:
      - description: 页码，默认1
        in: query
        minimum: 1
        name: page
        type: integer
      - description: 每页条数，默认20，最大100
        in: query
        maximum: 100
        minimum: 1
        name: page_size
        type: integer
      - description: 客户ID筛选
        in: query
        name: customer_id
        type: string
      - description: 状态筛选
        enum:
        - normal
        - locked
        - expired
        in: query
        name: status
        type: string
      - description: 创建开始时间
        in: query
        name: start_date
        type: string
      - description: 创建结束时间
        in: query
        name: end_date
        type: string
      - description: 排序字段，默认created_at
        enum:
        - created_at
        - updated_at
        - code
        in: query
        name: sort
        type: string
      - description: 排序方向，默认desc
        enum:
        - asc
        - desc
        in: query
        name: order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 查询成功
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.AuthorizationCodeListResponse'
              type: object
        "400":
          description: 请求参数无效
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: 未认证
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: 查询授权码列表
      tags:
      - 授权码管理
    post:
      consumes:
      - application/json
      description: 创建新的授权码，自动生成授权码字符串。有效期从当天00:00:00开始，到指定天数后的23:59:59结束
      parameters:
      - description: 授权码信息
        in: body
        name: authorization_code
        required: true
        schema:
          $ref: '#/definitions/models.AuthorizationCodeCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 创建成功
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.AuthorizationCodeCreateResponse'
              type: object
        "400":
          description: 请求参数无效
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: 未认证
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: 客户不存在
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "409":
          description: 授权码已存在
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: 创建授权码
      tags:
      - 授权码管理
  /api/v1/authorization-codes/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定的授权码（软删除）
      parameters:
      - description: 授权码ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            $ref: '#/definitions/models.APIResponse'
        "400":
          description: 请求参数无效
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: 未认证
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: 授权码不存在
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: 删除授权码
      tags:
      - 授权码管理
    get:
      consumes:
      - application/json
      description: 根据授权码ID获取授权码详细信息
      parameters:
      - description: 授权码ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 查询成功
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.AuthorizationCode'
              type: object
        "400":
          description: 请求参数无效
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: 未认证
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: 授权码不存在
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: 获取授权码详情
      tags:
      - 授权码管理
    put:
      consumes:
      - application/json
      description: 更新授权码信息，所有字段都是可选的，需要指定变更类型和原因
      parameters:
      - description: 授权码ID
        in: path
        name: id
        required: true
        type: string
      - description: 授权码信息
        in: body
        name: authorization_code
        required: true
        schema:
          $ref: '#/definitions/models.AuthorizationCodeUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.AuthorizationCode'
              type: object
        "400":
          description: 请求参数无效
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: 未认证
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: 授权码不存在
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: 更新授权码
      tags:
      - 授权码管理
  /api/v1/authorization-codes/{id}/lock:
    put:
      consumes:
      - application/json
      description: 锁定或解锁指定的授权码，可以设置锁定原因
      parameters:
      - description: 授权码ID
        in: path
        name: id
        required: true
        type: string
      - description: 锁定/解锁信息
        in: body
        name: lock_request
        required: true
        schema:
          $ref: '#/definitions/models.AuthorizationCodeLockRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 操作成功
          schema:
            allOf:
            - $ref: '#/definitions/models.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.AuthorizationCode'
              type: object
        "400":
          description: 请求参数无效
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: 未认证
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: 授权码不存在
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: 锁定/解锁授权码
      tags:
      - 授权码管理
  /api/v1/login:
    post:
      consumes:
      - application/json
      description: 管理员用户登录接口
      parameters:
      - description: 登录请求参数
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 登录成功
          schema:
            $ref: '#/definitions/models.LoginResponse'
        "400":
          description: 请求参数无效
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: 用户名或密码错误
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: 用户登录
      tags:
      - 认证
  /api/v1/logout:
    post:
      consumes:
      - application/json
      description: 用户登出接口
      produces:
      - application/json
      responses:
        "200":
          description: 登出成功
          schema:
            $ref: '#/definitions/models.APIResponse'
        "401":
          description: 未认证
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - BearerAuth: []
      summary: 用户登出
      tags:
      - 认证
  /health:
    get:
      consumes:
      - application/json
      description: 系统健康状态检查
      produces:
      - application/json
      responses:
        "200":
          description: 健康状态
          schema:
            $ref: '#/definitions/models.HealthResponse'
      summary: 健康检测
      tags:
      - 系统
schemes:
- http
- https
securityDefinitions:
  BearerAuth:
    description: Bearer token for authentication
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
